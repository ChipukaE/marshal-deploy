@model marshal_deploy.Models.MonthlyPerform
@{ ViewBag.Title = "Create"; }

<div class="card">
    <div class="card-header header-elements-inline">
        <h6 class="card-title text-brown-800 border-bottom-2">@ViewBag.Title</h6>
    </div>

    <div class="card-body">
        <form action="/MonthlyPerforms/Create" method="post" data-fouc>
            @Html.AntiForgeryToken() @Html.HiddenFor(x => x.CreatedAt)
            @Html.HiddenFor(x => x.UpdatedAt) @Html.HiddenFor(x => x.IsDeleted)
            @Html.HiddenFor(x => x.IsActive) @Html.HiddenFor(x => x.Audd)
            @Html.HiddenFor(x => x.Audp) @Html.HiddenFor(x => x.Audu)
            @Html.HiddenFor(x => x.lu_Audd) @Html.HiddenFor(x => x.lu_Audp)
            @Html.HiddenFor(x => x.lu_Audu)

            <fieldset>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-row">

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.MonthlyTargetId, "MonthlyTargetId",
                        htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.DropDownList("MonthlyTargetId", null, htmlAttributes: new
                            {
                            @class = "form-control"
                            }) @Html.ValidationMessageFor(model =>
model.MonthlyTargetId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.MonthlyZW, "MonthlyZW", htmlAttributes:
                        new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.DropDownList("MonthlyZW", null, htmlAttributes: new
                            {
                                @class =
                            "form-control"
                            }) @Html.ValidationMessageFor(model => model.MonthlyZW, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.MonthlyUSD, "MonthlyUSD", htmlAttributes:
                        new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.DropDownList("MonthlyUSD", null, htmlAttributes: new
                            {
                                @class =
                            "form-control"
                            }) @Html.ValidationMessageFor(model => model.MonthlyUSD, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.CollectedZW, htmlAttributes: new
                        {
                        @class = "control-label col-md-6"
                        })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CollectedZW, new
                            {
                                htmlAttributes =
                            new { @class = "form-control" }
                            })
                            @Html.ValidationMessageFor(model => model.CollectedZW, "", new
                            {
                            @class = "text-danger"
                            })
                        </div>
                    </div>

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.CollectedUSD, htmlAttributes: new
                        {
                        @class = "control-label col-md-6"
                        })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CollectedUSD, new
                            {
                                htmlAttributes
                            = new { @class = "form-control" }
                            })
                            @Html.ValidationMessageFor(model => model.CollectedUSD, "", new
                            {
                            @class = "text-danger"
                            })
                        </div>
                    </div>

                    @*
        <div class="form-group col-4">
          @Html.LabelFor(model => model.PerformanceZW, htmlAttributes: new {
          @class = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.PerformanceZW, new { htmlAttributes
            = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PerformanceZW, "", new {
            @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.PerformanceUSD, htmlAttributes: new {
          @class = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.PerformanceUSD, new {
            htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PerformanceUSD, "", new
            { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.Average, htmlAttributes: new { @class
          = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Average, new { htmlAttributes = new
            { @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.Average, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class =
          "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new
            { @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.Rating, "", new { @class = "text-danger" })
          </div>
        </div>
                    *@

                    <div class="form-group col-4">
                        @Html.LabelFor(model => model.ClusterId, "ClusterId",
                        htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.DropDownList("ClusterId", null, htmlAttributes: new
                            {
                                @class
                            = "form-control"
                            }) @Html.ValidationMessageFor(model =>
  model.ClusterId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*
        <div class="form-group col-4">
          @Html.LabelFor(model => model.Audd, htmlAttributes: new { @class =
          "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Audd, new { htmlAttributes = new {
            @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.Audd, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.Audu, htmlAttributes: new { @class =
          "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Audu, new { htmlAttributes = new {
            @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.Audu, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.Audp, htmlAttributes: new { @class =
          "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.Audp, new { htmlAttributes = new {
            @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.Audp, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.lu_Audd, htmlAttributes: new { @class
          = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.lu_Audd, new { htmlAttributes = new
            { @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.lu_Audd, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.lu_Audu, htmlAttributes: new { @class
          = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.lu_Audu, new { htmlAttributes = new
            { @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.lu_Audu, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.lu_Audp, htmlAttributes: new { @class
          = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.lu_Audp, new { htmlAttributes = new
            { @class = "form-control" } }) @Html.ValidationMessageFor(model =>
            model.lu_Audp, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new {
          @class = "control-label col-md-6" })
          <div class="col-md-10">
            <div class="checkbox">
              @Html.EditorFor(model => model.IsDeleted)
              @Html.ValidationMessageFor(model => model.IsDeleted, "", new {
              @class = "text-danger" })
            </div>
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class
          = "control-label col-md-6" })
          <div class="col-md-10">
            <div class="checkbox">
              @Html.EditorFor(model => model.IsActive)
              @Html.ValidationMessageFor(model => model.IsActive, "", new {
              @class = "text-danger" })
            </div>
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new {
          @class = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes =
            new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new {
            @class = "text-danger" })
          </div>
        </div>

        <div class="form-group col-4">
          @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new {
          @class = "control-label col-md-6" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes =
            new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UpdatedAt, "", new {
            @class = "text-danger" })
          </div>
        </div>
                    *@

                    <div class="form-group">
                        <button type="submit" class="btn btn-success ml-3">
                            Create <i class="icon-paperplane ml-2"></i>
                        </button>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-danger ml-3">
                            @Html.ActionLink("Cancel", "Index")
                            <i class="icon-paperplane ml-2"></i>
                        </button>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery-3.7.1.js"></script>
    <script src="~/Scripts/jquery-3.7.1.min.js"></script>
    <script src="~/Scripts/select2.js"></script>
    <script>
  $(document).ready(function () {
    $("#MonthlyTargetId").select2({
      theme: "classic",
    });
    $("#MonthlyZW").select2({
      theme: "classic",
    });
    $("#MonthlyUSD").select2({
      theme: "classic",
    });
    $("#ClusterId").select2({
      theme: "classic",
    });
  });
    </script>
}
