@model marshal_deploy.Models.PrecinctPerformance

@{
    ViewBag.Title = "Edit";
}

<style>
    .error {
        background-color: #ffdddd;
        color: #ff0000;
        padding: 10px;
        margin-bottom: 10px;
    }

    .btn.btn-success a {
        color: white;
        text-decoration: none;
    }

    .btn.btn-danger a {
        color: white;
        text-decoration: none;
    }
</style>

<div class="content">
    <div class="card">
        <div class="card-header header-elements-inline">
            <h6 class="card-title text-brown-800 border-bottom-2">@ViewBag.Title</h6>
        </div>

        <div class="card-body">
            <form action="/PrecinctPerformances/Edit/5" method="post" data-fouc>
                @Html.AntiForgeryToken()

                <fieldset>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-row">
                        @Html.HiddenFor(model => model.ShiftId)



                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.PrecinctId, "PrecinctId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.DropDownList("PrecinctId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PrecinctId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.ClusterId, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ClusterId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ClusterId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ZoneId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.PeriodId, "PeriodId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.DropDownList("PeriodId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PeriodId, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsDeleted)
                                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-success ml-3">
                                Save
                            </button>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-danger ml-3">
                                @Html.ActionLink("Cancel", "Index")

                            </button>
                        </div>
</fieldset>
            </form>
        </div>
    </div>
</div>
    @section Scripts { @Scripts.Render("~/bundles/jqueryval")
<script src="~/Content/global_assets/js/main/jquery.min.js"></script>
    }
